#!/bin/bash

source "$(dirname $BASH_SOURCE)/../cedarish.sh"

check-buildpacks() {
	[[ "$(docker ps -qaf name=herokuish-buildpacks)" ]]
}

download-buildpacks() {
	time docker run --name herokuish-buildpacks \
		-v /tmp/buildpacks \
		-v "$PWD:/mnt" \
		"$cedarish_image:$cedarish_version" \
		/mnt/build/linux/herokuish buildpack install
}


check-postgres() {
        [[ "$(docker ps -qaf name=postgres-server)" ]]
}

init-postgres() {
        docker run --name postgres-server -e POSTGRES_PASSWORD=mysecretpassword -d postgres
}



main() {
	declare app_abspath="$1" expected_output="$2"
	[[ -x "$PWD/build/linux/herokuish" ]] || {
		echo "!! Needs to be run from project root,"
		echo "!! and Linux build needs to exist."
		exit 127
	}
	set -eo pipefail; [[ "$TRACE" ]] && set -x
	check-cedarish || import-cedarish
	check-buildpacks || download-buildpacks
        check-postgres || init-postgres
	[[ "$CI" ]] || rmflag="--rm"
	docker run $rmflag -v "$app_abspath:/tmp/app" --link postgres-server:postgres-server --volumes-from herokuish-buildpacks "$cedarish_image:$cedarish_version" bash -c "\
		rm -rf /app && cp -r /tmp/app /app

                wget https://s3.amazonaws.com/akretion/packages/wkhtmltox-0.12.1_linux-trusty-amd64.deb && \
                dpkg -i wkhtmltox-0.12.1_linux-trusty-amd64.deb

                echo '=== INSTALLING EXTRA NATIVE LIBS FOR ODOO ==='
                export DEBIAN_FRONTEND=noninteractive
                apt-get update
                apt-get install -y libsasl2-dev graphviz python-cups python-dbus
                apt-get clean

		/mnt/build/linux/herokuish buildpack build
		PORT=5678 /mnt/build/linux/herokuish procfile start web &
		for retry in \$(seq 1 10); do sleep 1 && nc -z -w 5 localhost 5678 && break; done
		output=\"\$(curl --retry 3 -v -s localhost:5678)\"
		sleep 1
		echo '=== APP OUTPUT ==='
		echo -e \"\$output\"
		echo '=== END OUTPUT ==='
		[[ \"\$output\" == \"$expected_output\" ]]"
}

main "$@"
